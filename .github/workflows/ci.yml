name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        required: true
        default: 'Prateek'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Download project dependencies
        run: go mod vendor
        
      - name: Build
        run: make build

      - name: Run Unit Tests
        run: make test

      - name: Save application binary for next step
        uses: actions/upload-artifact@v2
        with:
          name: dmblogs
          path: dmblogs

  Push-To-Docker-Registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Download application binary
        uses: actions/download-artifact@v2
        with:
          name: dmblogs
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: deepak11627
          password: Google123#

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: deepak11627/blog:latest

  Integration-Test:
    runs-on: ubuntu-latest
    needs: Push-To-Docker-Registry
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: '#ricky2327'
          POSTGRES_USER: '#danglingmind'
          POSTGRES_DB: 'blogapp'
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        #
        ports:
          # Opens tcp port 6379 on the host and service container
          - 6379:6379
      backend:
        # Docker Hub image
        image: deepak11627/blog
        #
        ports:
          # Opens tcp port 6379 on the host and service container
          - 8000:8000
        env:
          #Postgres
          DB_HOST: postgres
          DB_DRIVER: postgres
          DB_USER: danglingmind
          DB_PASSWORD: '#ricky2327'
          DB_NAME: blogapp
          DB_PORT: 5432

          ACCESS_SECRET: 98hbun98h
          REFRESH_SECRET: 786dfdbjhsb

          #Redis
          REDIS_HOST: redis
          REDIS_PORT: 6379

          #server
          PORT: 8000
    steps:
      - uses: actions/checkout@v2

      - name: Create database tables
        run: psql -U postgres -d blogapp -a -f "./create-tables-postgres.sql"


      - name: Run Integration tests
        run: make test.integration

  Tag:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.tag }}
    needs: Integration-Test
    steps:
      - uses: actions/checkout@v2

      - name: Preparing to tag master after a push
        id: create_tag
        run: |
          ./generate-tag.sh
          echo "::set-output name=tag::$(git describe --abbrev=0 --tags)"





