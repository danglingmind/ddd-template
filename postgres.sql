CREATE DATABASE blogapp;
CREATE USER danglingmind WITH ENCRYPTED PASSWORD '#ricky2327';
GRANT ALL PRIVILEGES ON DATABASE blogapp TO danglingmind;


CREATE TABLE USERS (
    ID SERIAL PRIMARY KEY,
    FIRSTNAME TEXT NOT NULL CHECK (FIRSTNAME <> ''),
    MIDDLENAME TEXT,
    LASTNAME TEXT,
    COUNTRYCODE CHAR(3) NOT NULL,
    MOBILE CHAR(10) NOT NULL UNIQUE CHECK(MOBILE <> ''),
    EMAIL TEXT NOT NULL UNIQUE CHECK(EMAIL <> ''),
    PASSWORD TEXT NOT NULL CHECK (PASSWORD <> ''),
    CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    MODIFIED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ACTIVE BOOLEAN DEFAULT TRUE
);

CREATE TABLE TAGS (
    ID SERIAL PRIMARY KEY,
    NAME TEXT NOT NULL UNIQUE CHECK (NAME <> ''),
    CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ACTIVE BOOLEAN DEFAULT TRUE
);

CREATE TABLE BLOGS (
    ID SERIAL PRIMARY KEY,
    TITLE TEXT NOT NULL UNIQUE CHECK (TITLE <> ''),
    DESCRIPTION TEXT,
    CONTENT TEXT NOT NULL CHECK (CONTENT <> ''),
    CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    MODIFIED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    DRAFT BOOLEAN DEFAULT TRUE,
    USER_ID INT,
    CONSTRAINT FK_USERS
      FOREIGN KEY(USER_ID) 
	  REFERENCES USERS(ID)
);


CREATE TABLE BLOGTAGS (
    ID SERIAL PRIMARY KEY,
    BLOGID INT,
    TAGID INT,
    CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ACTIVE BOOLEAN DEFAULT TRUE,
    CONSTRAINT FK_BLOGS
      FOREIGN KEY(BLOGID) 
	  REFERENCES BLOGS(ID),
    CONSTRAINT FK_TAGS
      FOREIGN KEY(TAGID) 
	  REFERENCES TAGS(ID)
);



/*
$ psql -U danglingmind blogapp;  OR  psql -U postgres;


 drop owned by danglingmind;
 drop table blogtags;
 drop table blogs;
 drop table tags;
 drop table users;
 drop user danglingmind;

 */